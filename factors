#!/usr/bin/python3

import sys

def pollard_rho(n):
    """Pollard's rho algorithm to find a factor of n."""
    x, y, d = 2, 2, 1
    while d == 1:
        x = (x * x + 1) % n
        y = (y * y + 1) % n
        y = (y * y + 1) % n
        d = gcd(abs(x - y), n)
    return d

def factorize(num):
    """Factorize the given number into two smaller numbers."""
    if num % 2 == 0:
        return 2, num // 2

    factor = pollard_rho(num)
    if factor == num:
        return None

    return factor, num // factor

def gcd(a, b):
    """Calculate the greatest common divisor using Euclidean algorithm."""
    while b:
        a, b = b, a % b
    return a

def main():
    if len(sys.argv) != 2:
        print("Usage: ./factors <file>")
        sys.exit(1)

    input_file = sys.argv[1]
    try:
        with open(input_file, 'r') as file:
            for line in file:
                try:
                    number = int(line.strip())
                    if number < 2:
                        print(f"{number} is not a valid natural number.")
                    else:
                        factors = factorize(number)
                        if factors:
                            p, q = factors
                            print(f"{number}={p}*{q}")
                        else:
                            print(f"{number} is a prime number.")
                except ValueError:
                    print(f"Invalid number in the file: {line.strip()}")

    except FileNotFoundError:
        print(f"File '{input_file}' not found.")
        sys.exit(1)

if __name__ == "__main__":
    main()

